# Deployment para Redis
# En producción:
# 1. Agregar tolerancias, nodeSelector o affinity si hay nodos dedicados para Redis.
# 2. Configurar recursos (requests/limits) adecuados.
# 3. Usar storage dinámico (PVC con storageClassName).
# 4. Agregar probes si se requiere alta disponibilidad o readiness control.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      initContainers:
        - name: init-permissions
          image: busybox
          command: ["sh", "-c", "chown -R 1000:1000 /var/lib/redis/data"]
          volumeMounts:
            - name: redis-storage
              mountPath: /var/lib/redis/data
      containers:
        - name: redis
          image: redis:7
          ports:
            - containerPort: 6379
          env:
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: redis-config
                  key: REDIS_PORT
          volumeMounts:
            - name: redis-storage
              mountPath: /data     # Redis usa /data como ruta persistente por defecto
      volumes:
        - name: redis-storage
          persistentVolumeClaim:
            claimName: redis-pvc
